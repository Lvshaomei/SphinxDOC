常识须知
========

入门必知
--------

-  算法：解决某个问题的计算方法、步骤。\ `《如何通俗易懂的解释什么是算法》`_

.. _《如何通俗易懂的解释什么是算法》: https://www.zhihu.com/question/55136787

- `關於字符編碼，你所需要知道的`_

.. _關於字符編碼，你所需要知道的: http://jerryc.me/posts/f5f84b52/

-  CLI(Command Line Interface)：\ `CMD`_\ 、\ `Windows
   PowerShell`_\ 、\ `Bash`_\ 、…

.. Note::

   通常认为，命令行界面（CLI）没有图形用户界面（GUI）那么方便用户操作。因为，命令行界面的软件通常需要用户记忆操作的命令，但是，由于其本身的特点，命令行界面要较图形用户界面节约计算机系统的资源。在熟记命令的前提下，使用命令行界面往往要较使用图形用户界面的操作速度要快。所以，在现在的图形用户界面的操作系统中，通常都保留着可选的命令行界面。虽然现在许多计算机系统都提供了图形化的操作方式，但是却都没有因而停止提供文字模式的命令行操作方式，相反的，许多系统反而更加强这部分的功能，例如Windows就不只加强了操作命令的功能和数量，也一直在改善Shell。Programming的方式。而之所以要加强、改善，自然是因为不够好；操作系统的图形化操作方式对单一客户端计算机的操作，已经相当方便，但如果是一群客户端计算机，或者是24小时运作的服务器计算机及路由器、交换器等电信设备，图形化操作方式有时会力有未逮，所以需要不断增强命令行界面的脚本语言和宏语言来提供丰富的控制与自动化的系统管理能力，例如Linux系统的Bash或是Windows系统的Windows PowerShell。- `引自维基百科`_

.. _CMD: https://baike.sogou.com/v582162.htm?fromTitle=CMD
.. _Windows PowerShell: https://baike.sogou.com/v427396.htm?fromTitle=Windows+PowerShell
.. _Bash: https://baike.sogou.com/v2381315.htm?fromTitle=bash
.. _引自维基百科: https://zh.wikipedia.org/wiki/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%95%8C%E9%

.. Note::

   `RFC`_ ，请求意见稿（英语：Request for Comments，缩写：RFC）是由互联网工程任务组（IETF）发布的一系列备忘录。文件收集了有关互联网相关信息，以及UNIX和互联网社群的软件文件，以编号排定。当前RFC文件是由互联网协会（ISOC）赞助发行。
   RFC始于1969年，由当时就读加州大学洛杉矶分校（UCLA）的斯蒂芬·克罗克（Stephen D. Crocker）用来记录有关ARPANET开发的非正式文档，他是第一份RFC文档的撰写者。最终演变为用来记录互联网规范、协议、过程等的标准文件。基本的互联网通信协议都有在RFC文件内详细说明。RFC文件还额外加入许多的论题在标准内，例如对于互联网新开发的协议及发展中所有的记录。

.. _RFC: https://tools.ietf.org/rfc/index

信息安全相关
------------

- CTF 夺旗赛

.. Note::

   CTF（Capture The Flag，夺旗赛）是一种流行于网络安全技术人员之间的一种信息安全技术竞赛。其前身是传统黑客之间网络技术比拼的游戏，以代替之前黑客们通过互相发起真实攻击进行技术比拼的方式。起源于1996年第四届DEFCON。现在已成为全球范围网络安全圈流行的竞赛形式。

   通常CTF分为三种赛制：解题赛（Jeopardy）、攻防赛（Attack-Defence）和混合赛。

   竞赛模式基本分为解题模式、攻防模式和混合模式。大多题目的内容基本包括web安全，密码学、逆向、二进制安全编程类题目等国内外有很多CTF比赛。

   解题赛是线上赛通常采取的赛制，题目通常分为多个类型，如Web，Forensic（取证），Crypto（密码学），Binary（二进制）等。团队或个人可以通过解题获得一串具有一定格式的字符串，也就是flag。将flag提交到竞赛平台可以获得积分。题目的难度越大，分值就越高。当比赛结束后，得分最高者胜出。

   攻防赛是另一种有趣的赛制，常见于线下决赛。攻防赛中，每个队伍都会被分配一台主机或虚拟机，称为gamebox，队员可以通过网络连接到gamebox。而所有队伍的gamebox通过内网连接在一起。每个队伍的gamebox上都运行着多个相同的服务。参赛队伍需要挖掘服务的漏洞，然后攻击其他队伍的服务来获取flag，并提交给计分服务器来获取积分。与此同时，参赛队伍还需要修补自身服务中的漏洞来防止丢分。攻防赛不仅考验了参赛选手的技术水平，还考验了参赛者的体力，因为通常参赛者需要连续混合赛可能采取解题赛和攻防赛的混合模式，也可能是其他形式。

-  CTF Wiki

https://ctf-wiki.github.io/ctf-wiki/

大数据技术相关
--------------


软件开发相关
------------

-  模块化程序设计、分而治之

模块化程序的编写不是开始就逐条录入计算机语句和指令，而是首先用主程序、子程序、子过程等框架把软件的主要结构和流程描述出来，并定义和调试好各个框架之间的输入、输出链接关系。逐步求精的结果是得到一系列以功能块为单位的算法描述。以功能块为单位进行程序设计，实现其求解算法的方法称为模块化。模块化的目的是为了降低程序复杂度，使程序设计、调试和维护等操作简单化。

- 高内聚、低耦合

高内聚：模块内各元素关联性强，紧密程度高。

低耦合：让每个模块，尽可能的独立完成某个特定的子功能。

高内聚，低耦合的好处体现在系统持续发展的过程中，高内聚，低耦合的系统具有更好的重用性，维护性，扩展性，可以更高效的完成系统的维护开发，持续的支持业务的发展，而不会成为业务发展的障碍。

`图解高内聚低耦合`_

.. _图解高内聚低耦合: https://www.cnblogs.com/xdecode/p/9393885.html

前端相关
--------

-  `浏览器兼容性查询`_

.. _浏览器兼容性查询: https://caniuse.com/#home
